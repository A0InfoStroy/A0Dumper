<Window x:Name="mainForm" x:Class="A0Dumper.UI.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:A0Dumper.Smart.Tree.Entities;assembly=A0Dumper.Smart.Tree"
        mc:Ignorable="d"
        Title="A0 Dumper" Height="450" Width="800" Closing="Window_Closing" RenderOptions.BitmapScalingMode="HighQuality" Loaded="MainForm_Loaded" >
    <Window.Resources>
        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <RadioButton Background="Transparent" GroupName="MENUITEM_GRP" IsHitTestVisible="False" IsChecked="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=MenuItem}}">
                    <RadioButton.Resources>
                        <Style TargetType= "Ellipse">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Style>
                        <Style TargetType= "Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Style>
                    </RadioButton.Resources>
                    <Grid Margin="-1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="13"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="0" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                            <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                        </Border>
                        <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    </Grid>
                </RadioButton>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ToggleButton}" x:Key="TreeViewItemToggleButtonStyle">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5" Width="16">
                            <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="White" Stroke="#FF818181">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate TargetType="{x:Type TreeViewItem}" x:Key="ItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource TreeViewItemToggleButtonStyle}"/>
                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                </Trigger>
                <!-- Commented trigger -->
                <!--<Trigger Property="HasItems" Value="False">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
            </Trigger>-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_Файл">
                    <MenuItem x:Name="listMenuItem" Header="Bывод сметных объектов" Click="ListMenuItem_Click" />
                    <MenuItem Header="Вывод проекта в xml" IsEnabled="False"/>
                    <MenuItem Header="Вывод БД НСИ" IsEnabled="False"/>
                    <MenuItem x:Name="versionMenuItem" Header="Версия A0 API" IsEnabled="False"/>
                </MenuItem>
                <MenuItem x:Name="viewMenuItem" Header="_Вид" >
                    <MenuItem Header="Упорядочить">
                        <MenuItem x:Name="nameMenuItem" Header="по имени" IsCheckable="True" Template="{DynamicResource MenuItemControlTemplate1}" Checked="OrderMenuItem_Checked"/>
                        <MenuItem x:Name="markMenuItem" Header="по шифру" IsCheckable="True" Template="{DynamicResource MenuItemControlTemplate1}" Checked="OrderMenuItem_Checked"/>
                        <MenuItem x:Name="dateMenuItem" Header="по дате" IsCheckable="True" Template="{DynamicResource MenuItemControlTemplate1}" Checked="OrderMenuItem_Checked"/>
                        <MenuItem Header="по умолчанию" IsCheckable="True" Template="{DynamicResource MenuItemControlTemplate1}" Checked="OrderMenuItem_Checked"/>
                    </MenuItem>
                    <MenuItem Header="Отобразить">
                        <MenuItem Header="по возрастанию" IsCheckable="True" Template="{DynamicResource MenuItemControlTemplate1}" Checked="DisplayMenuItem_Checked" />
                        <MenuItem x:Name="descendingMenuItem" Header="по убыванию" IsCheckable="True" Template="{DynamicResource MenuItemControlTemplate1}" Checked="DisplayMenuItem_Checked"/>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </DockPanel>
        <Grid Margin="0,20,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TreeView Name="treeViewMenu"  TreeViewItem.Expanded="TreeViewItem_ExpandedAsync" TreeViewItem.Selected="TreeViewMenu_SelectedAsync" Margin="0,0,0,0" >
                
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type local:ITreeNode}" ItemsSource="{Binding SubNodes}">
                        <HierarchicalDataTemplate.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="Template" Value="{DynamicResource ItemTemplate}"/>
                            </Style>
                        </HierarchicalDataTemplate.ItemContainerStyle>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Image Width="16" Height="16" SnapsToDevicePixels="True">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Kind}" Value="Complex">
                                                <Setter Property="Source" Value="Resources/complex.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Kind}" Value="Project">
                                                <Setter Property="Source" Value="Resources/project.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Kind}" Value="OS">
                                                <Setter Property="Source" Value="Resources/os.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Kind}" Value="LS">
                                                <Setter Property="Source" Value="Resources/ls.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Kind}" Value="Head">
                                                <Setter Property="Source" Value="Resources/head.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Kind}" Value="Section">
                                                <Setter Property="Source" Value="Resources/chapter.png"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding Caption}" Margin="5,0"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,0,0" Width="1"/>
            <DataGrid x:Name="nodeContentDataGrid" ColumnWidth="*"  Grid.Column="2" AutoGenerateColumns="False" >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Шифр" Binding="{Binding Mark}" Width="0.5*" HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                    <DataGridTextColumn Header="Наименование" Binding="{Binding Name}" Width="2*" HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                    <DataGridTextColumn Header="День-месяц" Binding="{Binding DayMonth}" Width="0.5*" HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                    <DataGridTextColumn Header="Год" Binding="{Binding Year}" Width="0.5*" HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

    </Grid>
</Window>
